@using WebShop.App_GlobalResources
@using WebShop.Models
@model IEnumerable<Product>
@{
    ViewBag.Title = Locale.Index;
    var categories = ViewData["Categories"] as List<String>;
    var price = ViewData["Price"] as Dictionary<int, int>;
    var lastPrice = 0;
    var searchClassCat = new {@class = "search search-category"};
    var searchClassPrice = new { @class = "search search-price" };
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>@Locale.Index</h2>
<div class="row searchRow">
    <div class="col-md-4"></div>
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <div class="input-group">
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-search"></span>
            </span>
            <input id="searchBox" type="text" class="form-control search-text" placeholder="Search">
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-6 col-sm-3">
        <h4>@Locale.CategoryTitle</h4>
        <div class="well well-lg">
            @foreach (var cat in categories)
            {
                <div style="clear: both;">
                    @Html.CheckBox(cat, false, searchClassCat)
                    @Html.Label(cat)
                </div>
            }
        </div>
        <h4>@Locale.Price</h4>
        <div class="well well-lg">
            @foreach (var p in price)
            {
                <div style="clear: both;">
                    @Html.RadioButton("cat", p.Key + "," + p.Value, searchClassPrice)
                    @Html.Label(Locale.Between + " " + p.Key + " " + Locale.And + " " + p.Value)
                </div>
                lastPrice = p.Value;
            }
            <div style="clear: both;">
                @Html.RadioButton("cat", lastPrice + ", " + lastPrice*100, searchClassPrice)
                @Html.Label(Locale.LargerThan + " " + lastPrice)
            </div>
        </div>
    </div>
    <div class="col-xs-12 col-md-8">
        <div class="container">
            <div class="well well-sm">
                <strong>@Locale.Products</strong>
            </div>
            <div id="result">
                @Html.Partial("_SearchPartial")
            </div>
        </div>
        <a href="2" id="more" class="btn btn-info">@Locale.MoreResults</a>
    </div>
</div>

<div class="modal fade" id="addToBasketModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">@Locale.ModalTitle</h4>
            </div>
            <div class="modal-body">
                <p>One fine body&hellip;</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@Locale.ContinueShopping</button>
                <a href="@Url.Action("CheckOut", "Basket")" class="btn btn-primary">@Locale.GoToCart</a>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@section Scripts {
    @Scripts.Render("~/bundles/webshop")
    <script type="text/javascript">
        (function ($, searchProd, basketUtils) {
            function defaultSearch() {
                searchProd.search(1, true);
            }

            //For all searches, use a change event.
            $(".search").change(function() {
                defaultSearch();
            });
            //For the text search, use a delay as to not execute searches with every keyup.
            $("#searchBox").bind("input keyup", function () {
                var $this = $(this);
                var delay = 500; // 0.5 seconds delay after last input.

                clearTimeout($this.data("timer"));
                $this.data("timer", setTimeout(function () {
                    $this.removeData("timer");
                    //Execute method after the delay.
                    defaultSearch();
                }, delay));
            });
            //Functionality of more btn.
            $("#more").click(function (e) {
                e.preventDefault();
                searchProd.search($("#more").attr("href"), false);
            });

            $("body").delegate(".add-to-cart", "click", function (e) {
                e.preventDefault();
                basketUtils.addToBasket($(this));
            });
        })(jQuery, webShop.searchProducts, webShop.basketUtils)
    </script>
}


